load_module /usr/lib/nginx/modules/ngx_http_zstd_filter_module.so;
load_module /usr/lib/nginx/modules/ngx_http_brotli_filter_module.so;
pid /tmp/nginx/nginx.pid;
error_log stderr notice;
error_log /var/log/nginx/error.log warn;
worker_processes auto;
worker_rlimit_nofile 2048;

events {
	worker_connections 2048;
}

http {
	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_timeout 300s;
	send_timeout 60s;
	client_body_timeout 5s;
	client_header_timeout 5s;
	server_tokens off;
	etag off;
	resolver $DNS_RESOLVER valid=3600s;
	include /etc/nginx/mime.types;

	log_format default '[$time_local] [$proxy_add_x_forwarded_for] "$host" '
		'"$request" $status $body_bytes_sent '
		'"$http_referer" "$http_user_agent"';
	access_log /var/log/nginx/static.log default buffer=4k;

	scgi_temp_path /tmp/nginx/cache/scgi_temp;
	uwsgi_temp_path /tmp/nginx/cache/uwsgi_temp;
	fastcgi_temp_path /tmp/nginx/cache/fastcgi_temp;
	proxy_temp_path /tmp/nginx/cache/proxy_temp;
	client_body_temp_path /tmp/nginx/cache/client_temp;

	zstd on;
	zstd_comp_level 3;
	zstd_min_length 128;
	zstd_types
		text/plain
		text/css
		text/js
		text/javascript
		application/javascript
		application/json
		application/manifest+json
		image/x-icon
		image/svg+xml;

	brotli on;
	brotli_comp_level 3;
	brotli_min_length 128;
	brotli_types
		text/plain
		text/css
		text/js
		text/javascript
		application/javascript
		application/json
		application/manifest+json
		image/x-icon
		image/svg+xml;

	gzip on;
	gzip_vary on;
	gzip_comp_level 3;
	gzip_min_length 128;
	gzip_disable msie6;
	gzip_types
		text/plain
		text/css
		text/js
		text/javascript
		application/javascript
		application/json
		application/manifest+json
		image/x-icon
		image/svg+xml;

	upstream uvicorn {
		server unix:/tmp/bypasshub/uvicorn.sock;
		keepalive 32;
		keepalive_timeout 30s;
	}

	server {
		listen unix:/tmp/nginx/fallback.sock;
		listen unix:/tmp/nginx/fallback-ssl.sock ssl;
		http2 on;

		error_page 401 403 404 =404 @404;
		error_page 500 502 503 504 =500 @500;
		index index.html;
		root /etc/nginx/html;

		ssl_protocols TLSv1.3;
		ssl_stapling on;
		ssl_stapling_verify on;
		ssl_session_tickets off;
		ssl_prefer_server_ciphers off;
		ssl_certificate /etc/letsencrypt/live/$DOMAIN/fullchain.pem;
		ssl_certificate_key /etc/letsencrypt/live/$DOMAIN/privkey.pem;
		ssl_trusted_certificate /etc/letsencrypt/live/$DOMAIN/chain.pem;

		set $default "default-src 'self'";
		set $script "script-src 'self' 'unsafe-inline'";
		set $style "style-src 'self' 'unsafe-inline'";
		set $media "media-src 'self' data:";
		set $img "img-src 'self' data:";
		set $csp "${default}; ${script}; ${style}; ${media}; ${img}";

		location = /index.html {
			add_header Content-Security-Policy $csp;
			add_header Cache-Control no-cache;
			add_header Referrer-Policy no-referrer;
			add_header X-Content-Type-Options nosniff;
			add_header Strict-Transport-Security "max-age=31536000; includeSubDomains"; # 1 year
		}

		location = /api {
			# Preventing `FastAPI` to return HTTP 307
			rewrite ^(.*) $1/ last;
		}

		location ~ ^/(subscription|api)(/.*)?$ {
			access_log /var/log/nginx/api.log default;
			add_header Cache-Control no-cache;
			add_header Referrer-Policy no-referrer;
			add_header X-Content-Type-Options nosniff;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
			proxy_set_header Host $http_host;
			proxy_set_header Connection "";
			proxy_http_version 1.1;
			proxy_pass http://uvicorn;
		}

		location @404 {
			return 404 "Nothing Found";
		}

		location @500 {
			return 500 "Something Went Wrong";
		}
	}
}

stream {
	tcp_nodelay on;
	proxy_buffer_size 64k;
	resolver $DNS_RESOLVER valid=300s;

	log_format default '[$time_local] [$remote_addr] "$ssl_preread_server_name" '
		'$protocol $status $bytes_sent $bytes_received '
		'$session_time $upstream_addr';
	access_log /var/log/nginx/access.log default buffer=32k;

	map $ssl_preread_server_name $name {
		$XRAY_SNI xray; #? xray
		$XRAY_CDN_SNI xray; #? xray
		$OCSERV_SNI ocserv; #? ocserv
		default nginx;
	}

	upstream nginx {
		server unix:/tmp/nginx/fallback-ssl.sock;
	}

	#! xray
	upstream xray {
		server unix:/tmp/xray/xray.sock;
	}

	#! ocserv
	upstream ocserv {
		server ocserv:443;
	}

	#! ocserv
	upstream ocserv-udp {
		# Can't map an arbitrary port for DTLS
		# See https://gitlab.com/openconnect/ocserv/-/issues/351
		#     https://gitlab.com/openconnect/openconnect/-/issues/321
		server ocserv:$OCSERV_DTLS_PORT;
	}

	#! ocserv
	upstream ocserv-udp-ipv4 {
		server $OCSERV_IPV4:$OCSERV_DTLS_PORT;
	}

	server {
		listen 443 reuseport so_keepalive=on fastopen=128 backlog=2048;
		listen [::]:$TLS_PORT reuseport so_keepalive=on fastopen=128 backlog=2048;
		ssl_preread on;
		preread_buffer_size 64k;
		proxy_socket_keepalive on;
		proxy_pass $name;
	}

	#! ocserv
	server {
		listen $OCSERV_DTLS_PORT udp reuseport;

		# Leveraging Direct Server Return method for performance benefits.
		# The upstream server must send the answer packets directly
		# to the remote IP address and the source IP address of these
		# packets must be rewrited to the `NGINX` container IP address.
		proxy_bind $remote_addr:$remote_port transparent;
		proxy_responses 0;

		proxy_pass ocserv-udp-ipv4;
	}

	#! ocserv
	server {
		listen [::]:$OCSERV_DTLS_PORT udp reuseport;
		proxy_pass ocserv-udp;
	}
}
