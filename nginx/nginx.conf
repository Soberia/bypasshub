load_module /usr/lib/nginx/modules/ngx_http_brotli_filter_module.so;
pid /tmp/nginx/nginx.pid;
error_log /tmp/nginx/log/error.log warn;
worker_processes auto;
worker_rlimit_nofile 2048;

events {
	worker_connections 2048;
}

http {
	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_timeout 300s;
	send_timeout 60s;
	client_body_timeout 5s;
	client_header_timeout 5s;
	server_tokens off;
	etag off;
	resolver $DNS_IPV4 [$DNS_IPV6] valid=3600s;
	include /etc/nginx/mime.types;

	log_format default '[$time_local] [$proxy_add_x_forwarded_for] "$host" '
		'"$request" $status $body_bytes_sent '
		'"$http_referer" "$http_user_agent"';
	access_log /tmp/nginx/log/static.log default buffer=4k;

	scgi_temp_path /tmp/nginx/cache/scgi_temp;
	uwsgi_temp_path /tmp/nginx/cache/uwsgi_temp;
	fastcgi_temp_path /tmp/nginx/cache/fastcgi_temp;
	proxy_temp_path /tmp/nginx/cache/proxy_temp;
	client_body_temp_path /tmp/nginx/cache/client_temp;

	brotli on;
	brotli_comp_level 3;
	brotli_min_length 128;
	brotli_types
		text/plain
		text/css
		text/javascript
		application/javascript
		application/json
		image/svg+xml;

	gzip on;
	gzip_vary on;
	gzip_comp_level 3;
	gzip_min_length 128;
	gzip_disable msie6;
	gzip_types
		text/plain
		text/css
		text/javascript
		application/javascript
		application/json
		image/svg+xml;

	map $arg_uuid $uuid {
		include /tmp/xray/uuids; #? xray
		default 0;
	}

	server {
		# Nginx can't handle HTTP/1.1 and unencrypted HTTP/2 on the same socket
		listen unix:/tmp/nginx/fallback-h1.sock;
		listen unix:/tmp/nginx/fallback-h2.sock http2;
		listen unix:/tmp/nginx/fallback-ssl.sock http2 ssl;
		error_page 401 403 404 =404 @404;
		error_page 500 502 503 504 =500 @500;
		index index.html;

		ssl_protocols TLSv1.3;
		ssl_stapling on;
		ssl_stapling_verify on;
		ssl_session_tickets off;
		ssl_prefer_server_ciphers off;
		ssl_certificate /etc/letsencrypt/live/$DOMAIN/fullchain.pem;
		ssl_certificate_key /etc/letsencrypt/live/$DOMAIN/privkey.pem;
		ssl_trusted_certificate /etc/letsencrypt/live/$DOMAIN/chain.pem;

		set $default "default-src 'self'";
		set $script "script-src 'self' 'unsafe-inline'";
		set $style "style-src 'self' 'unsafe-inline'";
		set $media "media-src 'self' data:";
		set $img "img-src 'self' data:";
		set $csp "${default}; ${script}; ${style}; ${media}; ${img}";

		location = /index.html {
			add_header Content-Security-Policy $csp;
			add_header Cache-Control no-cache;
			add_header Referrer-Policy no-referrer;
			add_header X-Content-Type-Options nosniff;
			add_header Strict-Transport-Security "max-age=31536000; includeSubDomains"; # 1 year
		}

		location = /subscription {
			if ($uuid = 0) {
				return 404;
			}
			alias /tmp/xray/urls.txt;
			sub_filter "{uuid}" "${uuid}";
			sub_filter_once off;
			sub_filter_types text/plain;
			add_header Cache-Control no-cache;
		}

		location @404 {
			return 404 "Nothing Found";
		}

		location @500 {
			return 500 "Something Went Wrong";
		}
	}
}

stream {
	tcp_nodelay on;
	proxy_buffer_size 64k;
	resolver $DNS_RESOLVER valid=300s;

	log_format default '[$time_local] [$remote_addr] "$ssl_preread_server_name" '
		'$protocol $status $bytes_sent $bytes_received '
		'$session_time $upstream_addr';
	access_log /tmp/nginx/log/access.log default buffer=32k;

	map $ssl_preread_server_name $name {
		$XRAY_SNI xray; #? xray
		$XRAY_CDN_SNI xray; #? xray
		$OCSERV_SNI ocserv; #? ocserv
		default nginx;
	}

	upstream nginx {
		server unix:/tmp/nginx/fallback-ssl.sock fail_timeout=0;
	}

	#! bind
	upstream bind {
		server bind:53 fail_timeout=0;
	}

	#! xray
	upstream xray {
		server unix:/tmp/xray/xray.sock fail_timeout=0;
	}

	#! ocserv
	upstream ocserv {
		server ocserv:443 fail_timeout=0;
	}

	#! ocserv
	upstream ocserv-udp {
		# Can't map the port for DTLS
		# See https://gitlab.com/openconnect/ocserv/-/issues/351
		#     https://gitlab.com/openconnect/openconnect/-/issues/321
		server ocserv:$OCSERV_DTLS_PORT fail_timeout=0;
	}

	server {
		listen 443 reuseport so_keepalive=on fastopen=128 backlog=2048;
		listen [::]:$TLS_PORT reuseport so_keepalive=on fastopen=128 backlog=2048;
		ssl_preread on;
		preread_buffer_size 64k;
		proxy_socket_keepalive on;
		proxy_pass $name;
	}

	#! bind
	server {
		listen 53 reuseport so_keepalive=on fastopen=128 backlog=2048;
		listen 53 udp reuseport;
		listen [::]:53 reuseport so_keepalive=on fastopen=128 backlog=2048;
		listen [::]:53 udp reuseport;
		proxy_pass bind;
	}

	#! ocserv
	server {
		listen $OCSERV_DTLS_PORT udp reuseport;
		listen [::]:$OCSERV_DTLS_PORT udp reuseport;
		proxy_pass ocserv-udp;
	}
}
